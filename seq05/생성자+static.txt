생성자와 static 개념 정리
1. 생성자는 왜(언제) 쓰는가? 객체생성시 처리하고 싶은 내용을 넣고 싶을 때(멤버변수 초기화)
2. 생성자는 메서드이다. O
3. 생성자는 반드시 클래스이름과 동일해야 한다. O
4. 생성자는 동일한 이름으로 여러개 만들 수 없다. X
5. 생성자를 동일한 이름으로 여러개 만들 수 있다고 한다면 조건은? 입력 파라메터가 달라야한다.(타입, 순서, 개수)
6. 생성자를 나타내는 영어는? Constructor
7. 생성자를 제공하는 입력값으로만 객체를 생성할 수 있다. O
8. static은 실행시 객체를 생성하지 않아도 언제든 접근이 가능하다. O
9. static메서드는 객체를 생성 후,  메서드에 접근이 가능하다. X
10. 일반메서드(객체생성후)와 static메서드(객체생성상관X)의 차이점은 객체생성 여부이다. O
11. static 변수와 instance변수와의 차이점, 동일점을 각각 쓰시오. 
     차이점) static-객체생성상관X(원본영역), instance변수-객체생성후(힙영역) 
12. static 변수가 위치하는 T자형 메모리의 위치는? 원본영역, 메소드영역, static영역 
13. 다음 오른쪽과 같이 객체생성시 생성되는 힙영역의  메모리 크기를 구하시오. 
     원본 영역의 전역변수의 메모리 크기를 구하시오.
	public class Car {                                    Car c = new Car(100, 1000); 
		int size;						                            //힙영역의 메모리 크기 - 인스턴스 변수만 계산해주면 된다.(size + price => 8byte)
	   int price;                                                //원본영역의 메모리 크기 - 전역변수를 모두 계산해주면 된다.
      static  int count;                                        (size + price + count + PI => 20byte)
      static final double PI = 3.14;
  }